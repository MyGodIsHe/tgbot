---

- name: Deploy service
  hosts: web
  vars:
    service_name: tgbot
    env_path: "{{ env_path_full.stdout }}"
  tasks:
    - name: Install python
      package:
        name: python3.12-full
        update_cache: true
  
    - name: Install pip
      package:
        name: python3-pip

    - name: Install rsync
      package:
        name: rsync

    - name: Synchronize files
      synchronize:
        src: "{{ lookup('env', 'GITHUB_WORKSPACE') }}/"
        dest: "/var/lib/{{ service_name }}"
        delete: yes
        recursive: yes
        rsync_opts:
          - "--exclude='.git/'"
 
    - name: Install poetry
      pip:
        break_system_packages: true
        name: poetry

    - name: Create env
      command:
        chdir: "/var/lib/{{ service_name }}"
        cmd: poetry env use python3.12

    - name: Poetry install
      command:
        chdir: "/var/lib/{{ service_name }}"
        cmd: poetry install --only main

    - name: Get env path
      command:
        chdir: "/var/lib/{{ service_name }}"
        cmd: poetry env info -p
      register: env_path_full

    - name: Migrate
      command:
        chdir: "/var/lib/{{ service_name }}"
        cmd: "{{ env_path }}/bin/{{ service_name }} migrate"
      environment:
        SIMPLE_SETTINGS: "{{ service_name }}.settings.prod"
        POSTGRES_DSN: "{{ lookup('env', 'POSTGRES_DSN') }}"

    - name: Create systemd file
      template:
        src: system.service.j2
        dest: "/etc/systemd/system/{{ service_name }}.service"
        mode: 644
      vars:
        name: "{{ service_name }}"
        exec: "{{ env_path }}/bin/uvicorn tgbot.web:app --port 8003"
        extra_env_vars:
          - OPENAI_API_KEY
          - TG_TOKEN
          - SECRET_INVITE
          - YANDEX_FOLDERID
          - YANDEX_SEARCH_API_KEY
          - SENTRY_DSN
          - POSTGRES_DSN

    - name: Restart service
      service:
        name: "{{ service_name }}.service"
        state: restarted
        daemon_reload: true
